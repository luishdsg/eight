/*
 * App Global CSS
 * ----------------------------------------------------------------------------
 * Put style rules here that you want to apply globally. These styles are for
 * the entire app and not just one component. Additionally, this file can be
 * used as an entry point to import other CSS/Sass files to be included in the
 * output CSS.
 * For more information on global stylesheets, visit the documentation:
 * https://ionicframework.com/docs/layout/global-stylesheets
 */

/* Core CSS required for Ionic components to work properly */
@import "~@ionic/angular/css/core.css";

/* Basic CSS for apps built with Ionic */
@import "~@ionic/angular/css/normalize.css";
@import "~@ionic/angular/css/structure.css";
@import "~@ionic/angular/css/typography.css";
@import '~@ionic/angular/css/display.css';

/* Optional CSS utils that can be commented out */
@import "~@ionic/angular/css/padding.css";
@import "~@ionic/angular/css/float-elements.css";
@import "~@ionic/angular/css/text-alignment.css";
@import "~@ionic/angular/css/text-transformation.css";
@import "~@ionic/angular/css/flex-utils.css";

*,
ion-button {
    font-family: 'Poppins', sans-serif;
}

ion-button,
ion-button:hover,
ion-button:focus {
    outline: none;
    border: none;
}

tr {
    border-style: hidden;
}

td {
    padding: 0.5rem 0.2rem !important;
}



// CLASS-GLOBAL
.header-md::after {
    height: 0px !important;
}

.header-collapse-condense ion-toolbar {
    --background: transparent !important;
}

.header-ios ion-toolbar:last-of-type {
    --border-width: 0 0 0px;
}

.sc-ion-input-md-h,
.sc-ion-input-ios-h {
    --padding-top: 10px;
    --padding-end: 0;
    --padding-bottom: 10px;
    --padding-start: 13px;
}

// FONTS
.fw-300 {
    font-weight: 300 !important;
}

.fw-400 {
    font-weight: 400 !important;
}

.fw-500 {
    font-weight: 500 !important;
}

.fw-700 {
    font-weight: 700 !important;
}

.fw-900 {
    font-weight: 900 !important;
}

// TEXT
.text-center {
    text-align: -webkit-center !important;
}

.text-left {
    text-align: -webkit-left !important;
}

.text-right {
    text-align: -webkit-right !important;
}

.letter-spacing {
    letter-spacing: 0px;
}

.fz-12 {
    font-size: 12px !important;
}

.fz-15 {
    font-size: 15px !important;
}

.fz-18 {
    font-size: 18px !important;
}

// COLORS-BG
.color-dark-45 {
    color: var(--ion-color-step-450);
}

.bg-clear {
    background: #fafafa !important;
}

.bg-blur {
    background-color: rgba(255, 255, 255, 0.379);
    backdrop-filter: blur(10px);
}

// H-W
.h-fit {
    height: fit-content !important;
}

// TOOLÂ´S
.cursor {
    cursor: pointer;
}

.op-0 {
    opacity: 0;
}

.d-none {
    display: none !important;
}

// BORDER
.border8 {
    border-radius: 8px !important;
}

.border-bottom-clear {
    border-bottom: var(--ion-color-light-tint) !important;
}

// LEVELS
.puzzle-img {
    max-width: 500px !important;
}

// INPUT CODE PUZZLES

.c-checkbox {
    display: none;
  }
  
  .c-checkbox:checked+.c-formContainer .c-form {
    width: 100%;
  }
  
  .c-checkbox:checked+.c-formContainer .c-form__toggle {
    visibility: hidden;
    opacity: 0;
    transform: scale(0.7);
  }
  
  .c-checkbox:checked+.c-formContainer .c-form__input,
  .c-checkbox:checked+.c-formContainer .c-form__buttonLabel {
    transition: 0.2s 0.1s;
    visibility: visible;
    opacity: 1;
    transform: scale(1);
  }
  
  .c-formContainer,
  .c-form,
  .c-form__toggle {
    width: 90%;
    max-width: 400px;
    height: 3.25em;
  }
  
  
  
  .c-form {
    left: 50%;
    position: absolute;
    border-radius: 6.25em;
    transition: 0.2s;
    background-color: rgba(255, 255, 255, 0);
    border: 1px solid gray;
    transform: translateX(-50%);
    padding: 0.325em;
    box-sizing: border-box;
    box-shadow: 0 0.125em 0.3125em rgba(0, 0, 0, 0.3);
    display: flex;
    justify-content: center;
  }
  
  
  .c-form__toggle {
    color: white;
    position: absolute;
    border-radius: 6.25em;
    transition: 0.2s;
    top: 0;
    cursor: pointer;
    z-index: 1;
    display: flex;
    align-items: center;
    justify-content: center;
  }
  
  .c-form__toggle::before {
    font-size: 1.75em;
    content: attr(data-title);
  }
  
  .c-form__input,
  .c-form__button {
    font: inherit;
    border: 0;
    outline: 0;
    border-radius: 5em;
    box-sizing: border-box;
  }
  
  .c-form__input,
  .c-form__buttonLabel {
    font-size: 1em;
    opacity: 0;
    visibility: hidden;
    transform: scale(0.7);
    transition: 0s;
  }
  
  .c-form__input {
    color: white;
    height: 100%;
    width: 100%;
  }
  
  .c-form__input::placeholder {
    color: currentColor;
  }
  
  .c-form__input:required:valid+.c-form__buttonLabel {
    color: #ffffff;
  }
  
  .c-form__input:required:valid+.c-form__buttonLabel::before {
    pointer-events: initial;
  }
  
  .c-form__buttonLabel {
    color: gray;
    height: 100%;
    width: auto;
  }
  
  .c-form__buttonLabel::before {
    content: "";
    position: absolute;
    width: 100%;
    height: 100%;
    pointer-events: none;
    cursor: pointer;
  }
  
  .c-form__button {
    color: inherit;
    padding: 0 19px;
    height: 100%;
    border: 1px solid gray;
    width: 100%;
    background-color: black;
  }
  
  // WRONG
  .oops {
    animation: .2s shake;
  }
  
  @keyframes shake {
    0% {
      transform: skewX(-35deg);
    }
  
    25% {
      transform: skewX(35deg);
    }
  
    50% {
      transform: skewX(-35deg);
    }
  
    75% {
      transform: skewX(35deg);
    }
  
    100% {
      transform: skewX(-35deg);
    }
  }
  
  // WRONG
  .wrong {
    border: 1px solid red !important;
    color: red !important;
  }